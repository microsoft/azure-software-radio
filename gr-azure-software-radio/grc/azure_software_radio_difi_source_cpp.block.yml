# Copyright (c) Microsoft Corporation.
# Licensed under the GNU General Public License v3.0 or later.
# See License.txt in the project root for license information.
#

id: azure_software_radio_difi_source_cpp
label: DIFI Source
category: '[Azure software radio]'

templates:
  imports: import azure_software_radio
  make: azure_software_radio.difi_source_cpp_${type.fcn}(${ip_addr}, ${port}, ${protocol}, ${stream_num}, ${socket_buffer_size}, int(${bit_depth}), $)

parameters:
- id: type
  label: IO Type
  dtype: enum
  options: [complex, complex8]
  option_attributes:
      fcn: [fc32, sc8]
  hide: part
- id: bit_depth
  label: Bit Depth
  dtype: enum
  options: ['8', '16']
  default: '8'
- id: ip_addr
  label: Source IP Address
  dtype: string
  default: "127.0.0.1"
- id: port
  label: Port
  dtype: int
- id: protocol
  label: Protocol
  dtype: enum
  options: ['1', '2']
  option_labels: ['TCP', 'UDP']
  default: '2'
- id: socket_buffer_size
  label: Socket Buffer Size
  dtype: int
  default: 4096
- id: stream_num
  label: DIFI Stream Number
  dtype: int
  default: 0
- id: context_packet_overrids
  label: Context Mismatch Behavior
  category: Context_Config
  dtype: enum
  default: 'Default'
  options: ['0', '1', '2', '3']
  option_labels: ['Default (Throw Exceptions)', 'Ignore Mismatches - Forward data, No Warnings', 'Throw Warnings - Forward', 'Throw Warnings - No Foward']
outputs:
-   domain: stream
    dtype: ${ type.fcn }
asserts:
- ${ bit_depth == '8' if type.fcn == 'sc8' else True }

file_format: 1

